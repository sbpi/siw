create table FN_TIPO_LANCAMENTO
(
  SQ_TIPO_LANCAMENTO NUMBER(18) not null,
  CLIENTE            NUMBER(18) not null,
  NOME               VARCHAR2(200) not null,
  DESCRICAO          VARCHAR2(200),
  RECEITA            VARCHAR2(1) default 'S' not null,
  DESPESA            VARCHAR2(1) default 'S' not null,
  ATIVO              VARCHAR2(1) default 'S' not null
)
tablespace SYSTEM
  pctfree 10
  pctused 40
  initrans 1
  maxtrans 255
  storage
  (
    initial 66K
    minextents 1
    maxextents unlimited
  );
comment on table FN_TIPO_LANCAMENTO
  is 'Registra os tipos possíveis de lançamento financeiro.';
comment on column FN_TIPO_LANCAMENTO.SQ_TIPO_LANCAMENTO
  is 'Sequence.';
comment on column FN_TIPO_LANCAMENTO.CLIENTE
  is 'Chave de CO_PESSOA que indica a qual cliente o registro pertence.';
comment on column FN_TIPO_LANCAMENTO.NOME
  is 'Nome do tipo de lançamento.';
comment on column FN_TIPO_LANCAMENTO.DESCRICAO
  is 'Descrição do tipo de lançamento.';
comment on column FN_TIPO_LANCAMENTO.RECEITA
  is 'Indica se o tipo de lançamento deve ser usado para receitas da organização.';
comment on column FN_TIPO_LANCAMENTO.DESPESA
  is 'Indica se o tipo de lançamento deve ser usado para despesas da organização.';
comment on column FN_TIPO_LANCAMENTO.ATIVO
  is 'Indica se o tipo de lançamento pode ser ligado a novos registros.';
alter table FN_TIPO_LANCAMENTO
  add constraint PK_FN_TIPO_LANCAMENTO primary key (SQ_TIPO_LANCAMENTO)
  using index 
  tablespace SYSTEM
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 66K
    minextents 1
    maxextents unlimited
  );
alter table FN_TIPO_LANCAMENTO
  add constraint FK_FNTIPLAN_COPES foreign key (CLIENTE)
  references CO_PESSOA (SQ_PESSOA);
alter table FN_TIPO_LANCAMENTO
  add constraint CKC_DESPESA_FN_TIPO_
  check (DESPESA in ('S','N'));
alter table FN_TIPO_LANCAMENTO
  add constraint CKC_FNTIPLAN_ATIVO
  check (ATIVO in ('S','N'));
alter table FN_TIPO_LANCAMENTO
  add constraint CKC_RECEITA_FN_TIPO_
  check (RECEITA in ('S','N'));
create index IN_FNTIPLAN_CLIENTE on FN_TIPO_LANCAMENTO (CLIENTE,SQ_TIPO_LANCAMENTO)
  tablespace SYSTEM
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 66K
    minextents 1
    maxextents unlimited
  );
create unique index IN_FNTIPLAN_NOME on FN_TIPO_LANCAMENTO (CLIENTE,NOME)
  tablespace SYSTEM
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 66K
    minextents 1
    maxextents unlimited
  );

